RIRC README

***INTRO***

RIRC is a Ruby/GTK client for irssi2 (http://main.irssi.org/projects/irssi2.html). It was the first irssi2 client written, and at the time of writing is the most full featured.

***LICENCING***

GPL - see COPYING FILE

***REQUIREMENTS***

RIRC requires:

Ruby
ruby-libglade2 (and its dependancies) http://ruby-gnome2.sourceforge.jp

The following are only needed for ssh support where the native ssh binary is not available or on windows (currently broken anyway):
Net::SSH http://net-ssh.rubyforge.org/
Needle http://needle.rubyforge.org/

***SETUP***

Untar the tarball somewhere
cd into the folder
run './rirc.rb' or 'ruby rirc.rb'

***USAGE***

This is a list of the supported commands and their parameters:

/server <name>:<protocol>:<address>[:<port>] - Port is optional, irssi2 will use the defaults if its not specified. This command does NOT connect to the server, it merely defines the server so you can /connect to it.
/connect <networkname> [<presence>] - Connect to the network, if no presence is defined it will use the default.
/disconnect <network> [<presence>] - Disconnect from the network
/networks - List all defined networks.
/presences - List all defined presences.
/channels - list all defined channels.
/join <channel>
/part <channel>
/msg <user> <message>
/quit - Quit rirc, but leave irssi2 running.
/shutdown - Quit rirc and kill irssi2.
/send <file> Sends a file to irssi2 - buggy.
/whois <username>
/help - Displays this message
        
/raw <command> - Sends a raw command to irssi2, do NOT specify a tag.
/ruby <command> - Sends a command to ruby's eval() function, if you break something using this, you get to keep all the pieces.

***TROUBLESHOOTING***

hahah, you're using pre alpha software, fix it yourself or bug me on #irssi2 on freenode

***SSH***

If you have ssh installed and you're not on windows you can connect using ssh. You must however, either be using a key with no passphrase OR setup ssh_askpass.

***WIN32***

Currently RIRC will not run on windows, however the amount of work to make it do so is not very large, I just haven't gotten around to it yet,

However, the ONLY method you'll be able to use to connect to irssi2 is the ruby net::ssh method, which is a bit restictive IMO. Bug me if you really want me to finish porting it...

***CONTRIBUTING***

Anyone interested in helping is strongly encouraged to contact me. I could really use a second dev for this project.

***CONTACT***

vagabond@cataclysm-software.net
#irssi2 on irc.freenode.net

***COPYRIGHT***

Copyright 2005 Andrew Thompson

